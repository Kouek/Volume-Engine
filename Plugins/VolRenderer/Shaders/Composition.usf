#include "/Engine/Public/Platform.ush"

int2 RenderResolution;
SamplerState ColorSamplerState;
Texture2D<float4> InColorTexture;
RWTexture2D<float4> InOutColorTexture;

[numthreads(THREAD_PER_GROUP_X, THREAD_PER_GROUP_Y, THREAD_PER_GROUP_Z)]
void Main(int3 DispatchThreadID : SV_DispatchThreadID) {
    if (DispatchThreadID.x >= RenderResolution.x || DispatchThreadID.y >= RenderResolution.y)
        return;
    
    float2 UV = float2(float(DispatchThreadID.x) / (RenderResolution.x - 1), float(DispatchThreadID.y) / (RenderResolution.y - 1));
    float4 SrcColor = InColorTexture.Sample(ColorSamplerState, UV);
    float4 DstColor = InOutColorTexture[DispatchThreadID.xy];
    InOutColorTexture[DispatchThreadID.xy] = float4((1.f - SrcColor.a) * DstColor.rgb + SrcColor.a * SrcColor.rgb, 1.f);
}
